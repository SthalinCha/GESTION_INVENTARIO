version: '3.8'
services:
  ordenes-servicio:
    build: ./orden
    restart: on-failure
    container_name: ordenes-servicio
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - BASEDATOS_URL=sqlite:///./data/ordenes.db
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ordenes-data:/app/data
    
  inventario-servicio:
    build: ./inventario
    restart: on-failure
    container_name: inventario-servicio
    ports:
      - "8001:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - BASEDATOS_URL=sqlite:///./data/inventario.db
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - inventario-data:/app/data
  notificaciones-servicio:
    build: ./notificacion
    restart: on-failure
    container_name: notificaciones-servicio
    ports:
      - "8002:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - BASEDATOS_URL=sqlite:///./data/notificaciones.db
    env_file:
      -  ./notificacion/app/notificaciones.env
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - notificaciones-data:/app/data

  
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    hostname: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
volumes:
    ordenes-data:
    inventario-data:
    notificaciones-data:
    kafka-data:
    zookeeper-data:
